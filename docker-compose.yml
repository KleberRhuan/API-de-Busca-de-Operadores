name: Kleber-Rhuan-Intuitive-Care-Test

services:
  # Backend
  api:
    image: kleberrhuan/intuitive-care-backend:1.0.0
    container_name: intuitive-care-backend-dev
    command:
      [
        "/bin/bash",
        "-c",
        "source .venv/bin/activate && uvicorn src.presentation.main:application --host 0.0.0.0 --port 8080 --reload",
      ]
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
    environment:
      CORS_ORIGIN: "http://localhost:5173,http://localhost:3000,http://localhost:4173"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/operators_db"
      ENVIRONMENT: "dev"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 0
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Frontend
  frontend:
    image: kleberrhuan/intuitive-care-frontend:latest
    container_name: intuitive-care-frontend
    ports:
      - "4173:80"
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app-network

  # Postgres
  postgres:
    image: kleberrhuan/intuitive-care-postgresdb:latest
    container_name: intuitive-care-postgres-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=operators_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis
  redis:
    image: redis:latest
    container_name: intuitive-care-redis-db
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/data"
    restart: unless-stopped
    networks:
      - app-network
networks:
  app-network:
    name: intuitive-care-network
    external: true

volumes:
  postgres_data:
  redis_data:
